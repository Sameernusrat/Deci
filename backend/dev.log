
> deci-backend@1.0.0 dev
> ts-node-dev --respawn --transpile-only src/server.ts

[INFO] 10:31:06 ts-node-dev ver. 2.0.0 (using ts-node ver. 10.9.2, typescript ver. 4.9.5)
Server running on port 3001
[INFO] 10:38:00 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
Error calling Ollama API: AxiosError: timeout of 30000ms exceeded
    at RedirectableRequest.handleRequestTimeout (/Users/sameernusrat/deci/backend/node_modules/axios/lib/adapters/http.js:657:16)
    at RedirectableRequest.emit (node:events:507:28)
    at Timeout.<anonymous> (/Users/sameernusrat/deci/backend/node_modules/follow-redirects/index.js:221:12)
    at listOnTimeout (node:internal/timers:608:17)
    at processTimers (node:internal/timers:543:7)
    at Axios.request (/Users/sameernusrat/deci/backend/node_modules/axios/lib/core/Axios.js:45:41)
    at ChatService.callOllama (/Users/sameernusrat/deci/backend/src/services/ChatService.ts:75:24)
    at ChatService.processMessage (/Users/sameernusrat/deci/backend/src/services/ChatService.ts:123:27)
    at /Users/sameernusrat/deci/backend/src/routes/chat.ts:15:22 {
  code: 'ECONNABORTED',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 30000,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.10.0',
      'Content-Length': '1514',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'http://localhost:11434/api/generate',
    data: '{"model":"llama3.2","prompt":"cool - can you give me step by step","stream":false,"system":"You are an AI Equity Advisor specializing in equity compensation, tax, accounting, and legal questions across different jurisdictions. You help startups, employees, and investors understand:\\n\\n• Share option schemes (EMI, CSOP, SAYE, ISO, NSO, RSUs, etc.)\\n• Tax implications of equity compensation (income tax, capital gains, withholding)\\n• Accounting treatment of equity compensation\\n• Valuation methods and 409A valuations\\n• Legal compliance and regulatory requirements\\n• Cross-border equity considerations\\n• Exit strategies and liquidity events\\n\\nFORMATTING GUIDELINES:\\n- Always use clear headings with **bold text**\\n- Use bullet points (•) for lists and key points\\n- Structure complex information into logical sections\\n- Keep paragraphs short and focused\\n- Use line breaks between sections for readability\\n- When explaining processes, use numbered steps (1., 2., 3.)\\n- Include practical examples where helpful\\n\\nRESPONSE STRUCTURE:\\n1. Brief summary/overview\\n2. Key details organized by topic\\n3. Important considerations or risks\\n4. Next steps or recommendations\\n5. Note when professional advice is needed\\n\\nProvide accurate, practical advice while noting when professional consultation is recommended. Always specify which jurisdiction your advice applies to, and acknowledge when rules vary significantly between countries. Be comprehensive but well-organized for easy reading."}',
    allowAbsoluteUrls: true
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Array],
      timeout: undefined,
      abort: undefined
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      Symbol(kState): 17580812,
      Symbol(kBufferedValue): null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'http:',
      path: '/api/generate',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'localhost',
      port: '11434',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/api/generate'
    },
    _ended: true,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 1514,
    _requestBodyBuffers: [ [Object] ],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 1514,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'POST /api/generate HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.10.0\r\n' +
        'Content-Length: 1514\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: localhost:11434\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/generate',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: [HTTPParser],
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Circular *1],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Socket],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 65536,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    _currentUrl: 'http://localhost:11434/api/generate',
    _timeout: null,
    Symbol(shapeMode): true,
    Symbol(kCapture): false
  }
}
Error processing message with LLM: AxiosError: timeout of 30000ms exceeded
    at RedirectableRequest.handleRequestTimeout (/Users/sameernusrat/deci/backend/node_modules/axios/lib/adapters/http.js:657:16)
    at RedirectableRequest.emit (node:events:507:28)
    at Timeout.<anonymous> (/Users/sameernusrat/deci/backend/node_modules/follow-redirects/index.js:221:12)
    at listOnTimeout (node:internal/timers:608:17)
    at processTimers (node:internal/timers:543:7)
    at Axios.request (/Users/sameernusrat/deci/backend/node_modules/axios/lib/core/Axios.js:45:41)
    at ChatService.callOllama (/Users/sameernusrat/deci/backend/src/services/ChatService.ts:75:24)
    at ChatService.processMessage (/Users/sameernusrat/deci/backend/src/services/ChatService.ts:123:27)
    at /Users/sameernusrat/deci/backend/src/routes/chat.ts:15:22 {
  code: 'ECONNABORTED',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 30000,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.10.0',
      'Content-Length': '1514',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'http://localhost:11434/api/generate',
    data: '{"model":"llama3.2","prompt":"cool - can you give me step by step","stream":false,"system":"You are an AI Equity Advisor specializing in equity compensation, tax, accounting, and legal questions across different jurisdictions. You help startups, employees, and investors understand:\\n\\n• Share option schemes (EMI, CSOP, SAYE, ISO, NSO, RSUs, etc.)\\n• Tax implications of equity compensation (income tax, capital gains, withholding)\\n• Accounting treatment of equity compensation\\n• Valuation methods and 409A valuations\\n• Legal compliance and regulatory requirements\\n• Cross-border equity considerations\\n• Exit strategies and liquidity events\\n\\nFORMATTING GUIDELINES:\\n- Always use clear headings with **bold text**\\n- Use bullet points (•) for lists and key points\\n- Structure complex information into logical sections\\n- Keep paragraphs short and focused\\n- Use line breaks between sections for readability\\n- When explaining processes, use numbered steps (1., 2., 3.)\\n- Include practical examples where helpful\\n\\nRESPONSE STRUCTURE:\\n1. Brief summary/overview\\n2. Key details organized by topic\\n3. Important considerations or risks\\n4. Next steps or recommendations\\n5. Note when professional advice is needed\\n\\nProvide accurate, practical advice while noting when professional consultation is recommended. Always specify which jurisdiction your advice applies to, and acknowledge when rules vary significantly between countries. Be comprehensive but well-organized for easy reading."}',
    allowAbsoluteUrls: true
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Array],
      timeout: undefined,
      abort: undefined
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      Symbol(kState): 17580812,
      Symbol(kBufferedValue): null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'http:',
      path: '/api/generate',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'localhost',
      port: '11434',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/api/generate'
    },
    _ended: true,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 1514,
    _requestBodyBuffers: [ [Object] ],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 1514,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'POST /api/generate HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.10.0\r\n' +
        'Content-Length: 1514\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: localhost:11434\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/generate',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: [HTTPParser],
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Circular *1],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Socket],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 65536,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    _currentUrl: 'http://localhost:11434/api/generate',
    _timeout: null,
    Symbol(shapeMode): true,
    Symbol(kCapture): false
  }
}
[INFO] 10:42:07 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:42:19 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:44:08 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:44:26 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:44:43 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:47:31 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:52:57 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:55:41 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:56:04 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:57:22 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 10:57:41 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 11:03:11 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 11:03:25 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 11:04:40 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
[INFO] 11:07:25 Restarting: /Users/sameernusrat/deci/backend/src/services/ChatService.ts has been modified
Server running on port 3001
